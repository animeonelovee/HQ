# Generated by Django 4.2.5 on 2023-10-02 16:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('video_link', models.URLField()),
                ('duration', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LessonProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='app.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
            ],
            options={
                'unique_together': {('username',)},
            },
        ),
        migrations.CreateModel(
            name='ProductAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_access', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productaccess', to='app.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productaccess', to='app.usermodel')),
            ],
            options={
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='access',
            field=models.ManyToManyField(related_name='products_accessed', through='app.ProductAccess', to='app.usermodel'),
        ),
        migrations.AddField(
            model_name='product',
            name='lessons',
            field=models.ManyToManyField(related_name='products', through='app.LessonProduct', to='app.lesson'),
        ),
        migrations.AddField(
            model_name='product',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_owned', to='app.usermodel'),
        ),
        migrations.CreateModel(
            name='LessonViewStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_watched', models.IntegerField(default=0)),
                ('last_time_watched', models.DateTimeField(auto_now=True)),
                ('viewed', models.BooleanField(default=False)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_statuses', to='app.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_views', to='app.usermodel')),
            ],
            options={
                'unique_together': {('user', 'lesson')},
            },
        ),
        migrations.AddField(
            model_name='lessonproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='app.product'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='views',
            field=models.ManyToManyField(related_name='viewed_lessons', through='app.LessonViewStatus', to='app.usermodel'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('title',)},
        ),
        migrations.AlterUniqueTogether(
            name='lessonproduct',
            unique_together={('product', 'lesson')},
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('title',)},
        ),
    ]
